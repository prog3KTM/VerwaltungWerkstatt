/*
 * This file is generated by jOOQ.
 */
package htw.prog3.KTM.generated;


import htw.prog3.KTM.generated.tables.Car;
import htw.prog3.KTM.generated.tables.Customer;
import htw.prog3.KTM.generated.tables.Konfigurationstabelle;
import htw.prog3.KTM.generated.tables.Orders;
import htw.prog3.KTM.generated.tables.Service;
import htw.prog3.KTM.generated.tables.WorkshopInfo;
import htw.prog3.KTM.generated.tables.records.CarRecord;
import htw.prog3.KTM.generated.tables.records.CustomerRecord;
import htw.prog3.KTM.generated.tables.records.KonfigurationstabelleRecord;
import htw.prog3.KTM.generated.tables.records.OrdersRecord;
import htw.prog3.KTM.generated.tables.records.ServiceRecord;
import htw.prog3.KTM.generated.tables.records.WorkshopInfoRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CarRecord> CAR__PK_CAR = Internal.createUniqueKey(Car.CAR, DSL.name("pk_CAR"), new TableField[] { Car.CAR.ID }, true);
    public static final UniqueKey<CustomerRecord> CUSTOMER__PK_CUSTOMER = Internal.createUniqueKey(Customer.CUSTOMER, DSL.name("pk_CUSTOMER"), new TableField[] { Customer.CUSTOMER.ID }, true);
    public static final UniqueKey<KonfigurationstabelleRecord> KONFIGURATIONSTABELLE__PK_KONFIGURATIONSTABELLE = Internal.createUniqueKey(Konfigurationstabelle.KONFIGURATIONSTABELLE, DSL.name("pk_Konfigurationstabelle"), new TableField[] { Konfigurationstabelle.KONFIGURATIONSTABELLE.KEY }, true);
    public static final UniqueKey<OrdersRecord> ORDERS__PK_ORDERS = Internal.createUniqueKey(Orders.ORDERS, DSL.name("pk_ORDERS"), new TableField[] { Orders.ORDERS.ID }, true);
    public static final UniqueKey<ServiceRecord> SERVICE__PK_SERVICE = Internal.createUniqueKey(Service.SERVICE, DSL.name("pk_Service"), new TableField[] { Service.SERVICE.JOB_ID }, true);
    public static final UniqueKey<WorkshopInfoRecord> WORKSHOP_INFO__PK_WORKSHOP_INFO = Internal.createUniqueKey(WorkshopInfo.WORKSHOP_INFO, DSL.name("pk_WORKSHOP_INFO"), new TableField[] { WorkshopInfo.WORKSHOP_INFO.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CarRecord, CustomerRecord> CAR__FK_CAR_PK_CUSTOMER = Internal.createForeignKey(Car.CAR, DSL.name("fk_CAR_pk_CUSTOMER"), new TableField[] { Car.CAR.CUSTOMER_ID }, Keys.CUSTOMER__PK_CUSTOMER, new TableField[] { Customer.CUSTOMER.ID }, true);
    public static final ForeignKey<ServiceRecord, CarRecord> SERVICE__FK_SERVICE_PK_CAR = Internal.createForeignKey(Service.SERVICE, DSL.name("fk_Service_pk_CAR"), new TableField[] { Service.SERVICE.CAR_ID }, Keys.CAR__PK_CAR, new TableField[] { Car.CAR.ID }, true);
}
