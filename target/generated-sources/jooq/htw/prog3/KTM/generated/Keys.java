/*
 * This file is generated by jOOQ.
 */
package htw.prog3.KTM.generated;


import htw.prog3.KTM.generated.tables.Car;
import htw.prog3.KTM.generated.tables.Customer;
import htw.prog3.KTM.generated.tables.Konfigurationstabelle;
import htw.prog3.KTM.generated.tables.Orders;
import htw.prog3.KTM.generated.tables.Repairjob;
import htw.prog3.KTM.generated.tables.ServiceJob;
import htw.prog3.KTM.generated.tables.records.CarRecord;
import htw.prog3.KTM.generated.tables.records.CustomerRecord;
import htw.prog3.KTM.generated.tables.records.KonfigurationstabelleRecord;
import htw.prog3.KTM.generated.tables.records.OrdersRecord;
import htw.prog3.KTM.generated.tables.records.RepairjobRecord;
import htw.prog3.KTM.generated.tables.records.ServiceJobRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CarRecord> CAR__PK_CAR = Internal.createUniqueKey(Car.CAR, DSL.name("pk_Car"), new TableField[] { Car.CAR.ID }, true);
    public static final UniqueKey<CustomerRecord> CUSTOMER__PK_CUSTOMER = Internal.createUniqueKey(Customer.CUSTOMER, DSL.name("pk_Customer"), new TableField[] { Customer.CUSTOMER.ID }, true);
    public static final UniqueKey<KonfigurationstabelleRecord> KONFIGURATIONSTABELLE__PK_KONFIGURATIONSTABELLE = Internal.createUniqueKey(Konfigurationstabelle.KONFIGURATIONSTABELLE, DSL.name("pk_Konfigurationstabelle"), new TableField[] { Konfigurationstabelle.KONFIGURATIONSTABELLE.KEY }, true);
    public static final UniqueKey<OrdersRecord> ORDERS__PK_ORDERS = Internal.createUniqueKey(Orders.ORDERS, DSL.name("pk_Orders"), new TableField[] { Orders.ORDERS.ID }, true);
    public static final UniqueKey<RepairjobRecord> REPAIRJOB__PK_REPAIRJOB = Internal.createUniqueKey(Repairjob.REPAIRJOB, DSL.name("pk_RepairJob"), new TableField[] { Repairjob.REPAIRJOB.ID }, true);
    public static final UniqueKey<ServiceJobRecord> SERVICE_JOB__PK_SERVICE_JOB = Internal.createUniqueKey(ServiceJob.SERVICE_JOB, DSL.name("pk_SERVICE_JOB"), new TableField[] { ServiceJob.SERVICE_JOB.JOB_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CarRecord, CustomerRecord> CAR__FK_CAR_PK_CUSTOMER = Internal.createForeignKey(Car.CAR, DSL.name("fk_Car_pk_Customer"), new TableField[] { Car.CAR.CUSTOMER_ID }, Keys.CUSTOMER__PK_CUSTOMER, new TableField[] { Customer.CUSTOMER.ID }, true);
    public static final ForeignKey<OrdersRecord, CustomerRecord> ORDERS__FK_ORDERS_PK_CUSTOMER = Internal.createForeignKey(Orders.ORDERS, DSL.name("fk_Orders_pk_Customer"), new TableField[] { Orders.ORDERS.CUSTOMER_ID }, Keys.CUSTOMER__PK_CUSTOMER, new TableField[] { Customer.CUSTOMER.ID }, true);
    public static final ForeignKey<ServiceJobRecord, CarRecord> SERVICE_JOB__FK_SERVICE_JOB_PK_CAR = Internal.createForeignKey(ServiceJob.SERVICE_JOB, DSL.name("fk_SERVICE_JOB_pk_Car"), new TableField[] { ServiceJob.SERVICE_JOB.AUTO_ID }, Keys.CAR__PK_CAR, new TableField[] { Car.CAR.ID }, true);
}
